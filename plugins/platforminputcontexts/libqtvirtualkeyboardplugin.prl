QMAKE_PRL_BUILD_DIR = /home/beam/Desktop/qt-everywhere-src-5.11.0/qtvirtualkeyboard/src/virtualkeyboard
QMAKE_PRO_INPUT = virtualkeyboard.pro
QMAKE_PRL_TARGET = libqtvirtualkeyboardplugin.a
QMAKE_PRL_CONFIG = lex yacc depend_includepath testcase_targets import_qpa_plugin qt_build_extra file_copies qmake_use qt warn_on release link_prl incremental release static linux unix posix gcc use_gold_linker sse2 aesni sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vbmi compile_examples enable_new_dtags f16c largefile precompile_header rdrnd shani x86SimdAlways prefix_build force_independent utf8_source create_prl link_prl prepare_docs qt_docs_targets no_private_qt_headers_warning QTDIR_build qt_example_installs exceptions_off testcase_exceptions explicitlib qtquickcompiler link_pkgconfig lang-all lang-ar_AR lang-bg_BG lang-cs_CZ lang-da_DK lang-de_DE lang-el_GR lang-en_GB lang-es_ES lang-et_EE lang-fa_FA lang-fi_FI lang-fr_FR lang-he_IL lang-hi_IN lang-hr_HR lang-hu_HU lang-it_IT lang-ja_JP lang-ko_KR lang-nb_NO lang-nl_NL lang-pl_PL lang-pt_PT lang-ro_RO lang-ru_RU lang-sr_SP lang-sv_SE lang-zh_CN lang-zh_TW openwnn hangul pinyin tcime cangjie zhuyin plugin relative_qt_rpath create_cmake c++11 strict_c++ c++14 c++1z hide_symbols bsymbolic_functions have_target staticlib thread opengl moc resources dll
QMAKE_PRL_VERSION = 1.0.0
QMAKE_PRL_LIBS = -lxcb-xfixes -lxcb-render -lxcb-shape -lxcb -L$$[QT_INSTALL_LIBS] -lQt5Quick -L$$[QT_INSTALL_LIBS] -lQt5Gui -lqtlibpng -lqtharfbuzz -lQt5Qml -lrt -lQt5Network -lGL -L$$[QT_INSTALL_LIBS] -lqtpinyin -lqttcime -lqtopenwnn -lQt5Core -lm -licui18n -licuuc -licudata -lqtpcre2 -ldl -lpthread
